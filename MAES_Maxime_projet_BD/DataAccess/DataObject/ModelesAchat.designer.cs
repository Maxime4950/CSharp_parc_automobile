#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MAES_Maxime_projet_BD.DataAccess.DataObject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_Voiture")]
	public partial class ModelesAchatDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertModeleVoiture(ModeleVoiture instance);
    partial void UpdateModeleVoiture(ModeleVoiture instance);
    partial void DeleteModeleVoiture(ModeleVoiture instance);
    #endregion
		
		public ModelesAchatDataContext() : 
				base(global::MAES_Maxime_projet_BD.Properties.Settings.Default.BD_VoitureConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ModelesAchatDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelesAchatDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelesAchatDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelesAchatDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ModeleVoiture> ModeleVoiture
		{
			get
			{
				return this.GetTable<ModeleVoiture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModeleVoiture")]
	public partial class ModeleVoiture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idModele;
		
		private string _nomModele;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidModeleChanging(int value);
    partial void OnidModeleChanged();
    partial void OnnomModeleChanging(string value);
    partial void OnnomModeleChanged();
    #endregion
		
		public ModeleVoiture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idModele", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idModele
		{
			get
			{
				return this._idModele;
			}
			set
			{
				if ((this._idModele != value))
				{
					this.OnidModeleChanging(value);
					this.SendPropertyChanging();
					this._idModele = value;
					this.SendPropertyChanged("idModele");
					this.OnidModeleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nomModele", DbType="VarChar(70) NOT NULL", CanBeNull=false)]
		public string nomModele
		{
			get
			{
				return this._nomModele;
			}
			set
			{
				if ((this._nomModele != value))
				{
					this.OnnomModeleChanging(value);
					this.SendPropertyChanging();
					this._nomModele = value;
					this.SendPropertyChanged("nomModele");
					this.OnnomModeleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
